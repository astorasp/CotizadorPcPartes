# Configuración del API Gateway
server {
    listen 80 default_server;
    server_name _;
    
    # Logs específicos del gateway
    access_log /var/log/nginx/access.log gateway;
    error_log /var/log/nginx/error.log;
    
    # Health check del gateway
    location /health {
        access_log off;
        return 200 '{"status":"healthy","service":"api-gateway","timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }
    
    # =================================================================
    # FRONTEND ESTÁTICO (Vue.js) - Proxy al contenedor frontend
    # =================================================================
    location / {
        # Proxy al contenedor frontend
        proxy_pass http://frontend:80;
        
        # Headers estándar de proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache control
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }
    
    # =================================================================
    # API MICROSERVICIO COTIZADOR
    # =================================================================
    location /api/cotizador/ {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # Reescribir URL para quitar el prefijo /api/cotizador
        rewrite ^/api/cotizador/(.*) /cotizador/v1/api/$1 break;
        
        # Proxy al microservicio
        proxy_pass http://backend-cotizador;
        
        # Headers estándar de proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Headers para microservicios
        proxy_set_header X-Gateway-Request-ID $request_id;
        proxy_set_header X-Gateway-Source "api-gateway";
        
        # Timeouts específicos para API
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Manejo de errores
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @cotizador_error;
    }
    
    # =================================================================
    # API MICROSERVICIO SEGURIDAD
    # =================================================================
    location /api/seguridad/ {
        # Rate limiting más estricto para autenticación
        limit_req zone=auth burst=10 nodelay;
        
        # Reescribir URL para quitar el prefijo /api/seguridad
        rewrite ^/api/seguridad/(.*) /seguridad/v1/api/$1 break;
        
        # Proxy al microservicio
        proxy_pass http://backend-seguridad;
        
        # Headers estándar de proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Headers para microservicios
        proxy_set_header X-Gateway-Request-ID $request_id;
        proxy_set_header X-Gateway-Source "api-gateway";
        
        # Timeouts específicos para auth
        proxy_connect_timeout 5s;
        proxy_send_timeout 15s;
        proxy_read_timeout 15s;
        
        # Manejo de errores
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @seguridad_error;
    }
    
    # =================================================================
    # MANEJO DE ERRORES PERSONALIZADOS
    # =================================================================
    location @cotizador_error {
        internal;
        add_header Content-Type application/json always;
        return 503 '{"error":"Servicio de cotizador no disponible","code":"COTIZADOR_UNAVAILABLE","timestamp":"$time_iso8601"}';
    }
    
    location @seguridad_error {
        internal;
        add_header Content-Type application/json always;
        return 503 '{"error":"Servicio de seguridad no disponible","code":"SEGURIDAD_UNAVAILABLE","timestamp":"$time_iso8601"}';
    }
    
    # =================================================================
    # ENDPOINTS DE MONITOREO
    # =================================================================
    location /gateway/status {
        access_log off;
        return 200 '{"gateway":"online","upstreams":{"cotizador":"backend-cotizador","seguridad":"backend-seguridad"},"timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }
    
    location /gateway/info {
        access_log off;
        return 200 '{"service":"api-gateway","version":"1.0.0","nginx_version":"$nginx_version","timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }
    
    # =================================================================
    # BLOQUEAR ACCESO DIRECTO A MICROSERVICIOS
    # =================================================================
    location ~ ^/(cotizador|seguridad)/ {
        return 403 '{"error":"Acceso directo no permitido. Use /api/cotizador/ o /api/seguridad/","code":"DIRECT_ACCESS_FORBIDDEN"}';
        add_header Content-Type application/json;
    }
}