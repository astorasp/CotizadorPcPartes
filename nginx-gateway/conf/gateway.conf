# Configuración del API Gateway
server {
    listen 80 default_server;
    server_name _;
    
    # Logs específicos del gateway
    access_log /var/log/nginx/access.log gateway;
    error_log /var/log/nginx/error.log;
    
    # Health check del gateway
    location /health {
        access_log off;
        return 200 '{"status":"healthy","service":"api-gateway","timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }
    
    # =================================================================
    # RUTAS API ESPECÍFICAS (DEBEN IR ANTES DEL FRONTEND)
    # =================================================================
    
    # PCs exacto (sin slash final)
    location = /api/pcs {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # Reescribir URL para PCs exacto
        rewrite ^(.*)$ /api/v1/pcs break;
        
        # Proxy al microservicio de componentes
        proxy_pass http://backend-componentes;
        
        # Headers estándar de proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Headers para microservicios
        proxy_set_header X-Gateway-Request-ID $request_id;
        proxy_set_header X-Gateway-Source "api-gateway";
        
        # Headers de autenticación y autorización
        proxy_set_header Authorization $http_authorization;
        proxy_set_header X-User-ID $http_x_user_id;
        proxy_set_header X-User-Roles $http_x_user_roles;
        
        # Configuración de timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Manejo de errores
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @componentes_error;
    }
    
    # PCs con path adicional
    location /api/pcs/ {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # Reescribir URL para quitar el prefijo /api/pcs/
        rewrite ^/api/pcs/(.+)$ /api/v1/pcs/$1 break;
        
        # Proxy al microservicio de componentes
        proxy_pass http://backend-componentes;
        
        # Headers estándar de proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Headers para microservicios
        proxy_set_header X-Gateway-Request-ID $request_id;
        proxy_set_header X-Gateway-Source "api-gateway";
        
        # Headers de autenticación y autorización
        proxy_set_header Authorization $http_authorization;
        proxy_set_header X-User-ID $http_x_user_id;
        proxy_set_header X-User-Roles $http_x_user_roles;
        
        # Configuración de timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Manejo de errores
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @componentes_error;
    }
    
    # Promociones exacto (sin slash final)
    location = /api/promociones {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # Reescribir URL para promociones exacto
        rewrite ^(.*)$ /api/v1/promociones break;
        
        # Proxy al microservicio de componentes
        proxy_pass http://backend-componentes;
        
        # Headers estándar de proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Headers para microservicios
        proxy_set_header X-Gateway-Request-ID $request_id;
        proxy_set_header X-Gateway-Source "api-gateway";
        
        # Headers de autenticación y autorización
        proxy_set_header Authorization $http_authorization;
        proxy_set_header X-User-ID $http_x_user_id;
        proxy_set_header X-User-Roles $http_x_user_roles;
        
        # Configuración de timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Manejo de errores
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @componentes_error;
    }
    
    # Promociones con path adicional
    location /api/promociones/ {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # Reescribir URL para quitar el prefijo /api/promociones/
        rewrite ^/api/promociones/(.+)$ /api/v1/promociones/$1 break;
        
        # Proxy al microservicio de componentes
        proxy_pass http://backend-componentes;
        
        # Headers estándar de proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Headers para microservicios
        proxy_set_header X-Gateway-Request-ID $request_id;
        proxy_set_header X-Gateway-Source "api-gateway";
        
        # Headers de autenticación y autorización
        proxy_set_header Authorization $http_authorization;
        proxy_set_header X-User-ID $http_x_user_id;
        proxy_set_header X-User-Roles $http_x_user_roles;
        
        # Configuración de timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Manejo de errores
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @componentes_error;
    }
    
    # =================================================================
    # FRONTEND ESTÁTICO (Vue.js) - Proxy al contenedor frontend
    # =================================================================
    location / {
        # Proxy al contenedor frontend
        proxy_pass http://frontend:80;
        
        # Headers estándar de proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache control
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }
    
    # =================================================================
    # API MICROSERVICIO SEGURIDAD
    # =================================================================
    location /api/seguridad/ {
        # Rate limiting más estricto para autenticación
        limit_req zone=auth burst=10 nodelay;
        
        # Reescribir URL para el nuevo formato
        rewrite ^/api/seguridad/?(.*)$ /api/v1/seguridad/$1 break;
        
        # Proxy al microservicio
        proxy_pass http://backend-seguridad;
        
        # Headers estándar de proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Headers para microservicios
        proxy_set_header X-Gateway-Request-ID $request_id;
        proxy_set_header X-Gateway-Source "api-gateway";
        
        # Pasar headers de autorización
        proxy_pass_request_headers on;
        proxy_set_header Authorization $http_authorization;
        
        # Timeouts específicos para auth
        proxy_connect_timeout 5s;
        proxy_send_timeout 15s;
        proxy_read_timeout 15s;
        
        # Manejo de errores
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @seguridad_error;
    }
    
    # =================================================================
    # API MICROSERVICIO COMPONENTES
    # =================================================================
    
    # Sub-recursos específicos de componentes (DEBEN IR ANTES de la regla general)
    location /api/componentes/pcs/ {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # Reescribir URL para dirigir al controlador de PCs
        rewrite ^/api/componentes/pcs/?(.*)$ /api/v1/pcs/$1 break;
        
        # Proxy al microservicio de componentes
        proxy_pass http://backend-componentes;
        
        # Headers estándar de proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Headers para microservicios
        proxy_set_header X-Gateway-Request-ID $request_id;
        proxy_set_header X-Gateway-Source "api-gateway";
        
        # Pasar headers de autorización
        proxy_pass_request_headers on;
        proxy_set_header Authorization $http_authorization;
        
        # Timeouts específicos para API
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Manejo de errores
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @componentes_error;
    }
    
    location /api/componentes/promociones/ {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # Reescribir URL para dirigir al controlador de Promociones
        rewrite ^/api/componentes/promociones/?(.*)$ /api/v1/promociones/$1 break;
        
        # Proxy al microservicio de componentes
        proxy_pass http://backend-componentes;
        
        # Headers estándar de proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Headers para microservicios
        proxy_set_header X-Gateway-Request-ID $request_id;
        proxy_set_header X-Gateway-Source "api-gateway";
        
        # Pasar headers de autorización
        proxy_pass_request_headers on;
        proxy_set_header Authorization $http_authorization;
        
        # Timeouts específicos para API
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Manejo de errores
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @componentes_error;
    }
    
    # Componentes exacto (sin slash final)
    location = /api/componentes {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # Reescribir URL para componentes exacto
        rewrite ^(.*)$ /api/v1/componentes break;
        
        # Proxy al microservicio
        proxy_pass http://backend-componentes;
        
        # Headers estándar de proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Headers para microservicios
        proxy_set_header X-Gateway-Request-ID $request_id;
        proxy_set_header X-Gateway-Source "api-gateway";
        
        # Pasar headers de autorización
        proxy_pass_request_headers on;
        proxy_set_header Authorization $http_authorization;
        
        # Timeouts específicos para API
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Manejo de errores
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @componentes_error;
    }
    
    # Componentes con path adicional (después de las reglas específicas)
    location /api/componentes/ {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # Reescribir URL para quitar el prefijo /api/componentes/
        rewrite ^/api/componentes/(.+)$ /api/v1/componentes/$1 break;
        
        # Proxy al microservicio
        proxy_pass http://backend-componentes;
        
        # Headers estándar de proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Headers para microservicios
        proxy_set_header X-Gateway-Request-ID $request_id;
        proxy_set_header X-Gateway-Source "api-gateway";
        
        # Pasar headers de autorización
        proxy_pass_request_headers on;
        proxy_set_header Authorization $http_authorization;
        
        # Timeouts específicos para API
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Manejo de errores
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @componentes_error;
    }
    
    # =================================================================
    # RUTAS API SIMPLIFICADAS - COTIZACIONES
    # =================================================================
    
    # Cotizaciones exacto (sin slash final)
    location = /api/cotizaciones {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # Reescribir URL para cotizaciones exacto
        rewrite ^(.*)$ /api/v1/cotizaciones break;
        
        # Proxy al microservicio de cotizaciones
        proxy_pass http://backend-cotizaciones;
        
        # Headers estándar de proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Headers para microservicios
        proxy_set_header X-Gateway-Request-ID $request_id;
        proxy_set_header X-Gateway-Source "api-gateway";
        
        # Headers de autenticación y autorización
        proxy_set_header Authorization $http_authorization;
        proxy_set_header X-User-ID $http_x_user_id;
        proxy_set_header X-User-Roles $http_x_user_roles;
        
        # Configuración de timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Manejo de errores
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @cotizaciones_error;
    }
    
    
    # =================================================================
    # API MICROSERVICIO COTIZACIONES
    # =================================================================
    location /api/cotizaciones/ {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # Reescribir URL para quitar el prefijo /api/cotizaciones
        rewrite ^/api/cotizaciones/?(.*)$ /api/v1/cotizaciones/$1 break;
        
        # Proxy al microservicio
        proxy_pass http://backend-cotizaciones;
        
        # Headers estándar de proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Headers para microservicios
        proxy_set_header X-Gateway-Request-ID $request_id;
        proxy_set_header X-Gateway-Source "api-gateway";
        
        # Pasar headers de autorización
        proxy_pass_request_headers on;
        proxy_set_header Authorization $http_authorization;
        
        # Timeouts específicos para API
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Manejo de errores
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @cotizaciones_error;
    }
    
    # =================================================================
    # RUTAS API SIMPLIFICADAS - PEDIDOS  
    # =================================================================
    
    # Pedidos exacto (sin slash final)
    location = /api/pedidos {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # Reescribir URL para pedidos exacto
        rewrite ^(.*)$ /api/v1/pedidos break;
        
        # Proxy al microservicio de pedidos
        proxy_pass http://backend-pedidos;
        
        # Headers estándar de proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Headers para microservicios
        proxy_set_header X-Gateway-Request-ID $request_id;
        proxy_set_header X-Gateway-Source "api-gateway";
        
        # Headers de autenticación y autorización
        proxy_set_header Authorization $http_authorization;
        proxy_set_header X-User-ID $http_x_user_id;
        proxy_set_header X-User-Roles $http_x_user_roles;
        
        # Configuración de timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Manejo de errores
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @pedidos_error;
    }
    
    
    # Pedidos generales (después de las reglas específicas)
    location /api/pedidos/ {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # Reescribir URL para quitar el prefijo /api/pedidos
        rewrite ^/api/pedidos/?(.*)$ /api/v1/pedidos/$1 break;
        
        # Proxy al microservicio
        proxy_pass http://backend-pedidos;
        
        # Headers estándar de proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Headers para microservicios
        proxy_set_header X-Gateway-Request-ID $request_id;
        proxy_set_header X-Gateway-Source "api-gateway";
        
        # Pasar headers de autorización
        proxy_pass_request_headers on;
        proxy_set_header Authorization $http_authorization;
        
        # Timeouts específicos para API
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Manejo de errores
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @pedidos_error;
    }

    # =================================================================
    # API MICROSERVICIO PEDIDOS PArA PROVEEDORES
    # =================================================================
    # Pedidos exacto (sin slash final)
    location = /api/proveedores {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # Reescribir URL para pedidos exacto
        rewrite ^(.*)$ /api/v1/proveedores break;
        
        # Proxy al microservicio de pedidos
        proxy_pass http://backend-pedidos;
        
        # Headers estándar de proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Headers para microservicios
        proxy_set_header X-Gateway-Request-ID $request_id;
        proxy_set_header X-Gateway-Source "api-gateway";
        
        # Headers de autenticación y autorización
        proxy_set_header Authorization $http_authorization;
        proxy_set_header X-User-ID $http_x_user_id;
        proxy_set_header X-User-Roles $http_x_user_roles;
        
        # Configuración de timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Manejo de errores
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @pedidos_error;
    }
    
    
    # Pedidos generales (después de las reglas específicas)
    location /api/proveedores/ {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # Reescribir URL para quitar el prefijo /api/pedidos
        rewrite ^/api/proveedores/?(.*)$ /api/v1/proveedores/$1 break;
        
        # Proxy al microservicio
        proxy_pass http://backend-pedidos;
        
        # Headers estándar de proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Headers para microservicios
        proxy_set_header X-Gateway-Request-ID $request_id;
        proxy_set_header X-Gateway-Source "api-gateway";
        
        # Pasar headers de autorización
        proxy_pass_request_headers on;
        proxy_set_header Authorization $http_authorization;
        
        # Timeouts específicos para API
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Manejo de errores
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @pedidos_error;
    }   
    
    # =================================================================
    # MANEJO DE ERRORES PERSONALIZADOS
    # =================================================================
    location @seguridad_error {
        internal;
        add_header Content-Type application/json always;
        return 503 '{"error":"Servicio de seguridad no disponible","code":"SEGURIDAD_UNAVAILABLE","timestamp":"$time_iso8601"}';
    }
    
    location @componentes_error {
        internal;
        add_header Content-Type application/json always;
        return 503 '{"error":"Servicio de componentes no disponible","code":"COMPONENTES_UNAVAILABLE","timestamp":"$time_iso8601"}';
    }
    
    location @cotizaciones_error {
        internal;
        add_header Content-Type application/json always;
        return 503 '{"error":"Servicio de cotizaciones no disponible","code":"COTIZACIONES_UNAVAILABLE","timestamp":"$time_iso8601"}';
    }
    
    location @pedidos_error {
        internal;
        add_header Content-Type application/json always;
        return 503 '{"error":"Servicio de pedidos no disponible","code":"PEDIDOS_UNAVAILABLE","timestamp":"$time_iso8601"}';
    }
    
    # =================================================================
    # ENDPOINTS DE MONITOREO
    # =================================================================
    location /gateway/status {
        access_log off;
        return 200 '{"gateway":"online","upstreams":{"seguridad":"backend-seguridad","componentes":"backend-componentes","cotizaciones":"backend-cotizaciones","pedidos":"backend-pedidos"},"timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }
    
    location /gateway/info {
        access_log off;
        return 200 '{"service":"api-gateway","version":"1.0.0","nginx_version":"$nginx_version","timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }
    
    # =================================================================
    # BLOQUEAR ACCESO DIRECTO A MICROSERVICIOS
    # =================================================================
    location ~ ^/(cotizador|seguridad|componentes|cotizaciones|pedidos)/ {
        return 403 '{"error":"Acceso directo no permitido. Use /api/componentes/, /api/cotizaciones/, /api/pedidos/, /api/cotizador/ o /api/seguridad/","code":"DIRECT_ACCESS_FORBIDDEN"}';
        add_header Content-Type application/json;
    }
}