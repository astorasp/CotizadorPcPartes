spring:
  application:
    name: cotizador-componentes-api
  
  datasource:
    url: jdbc:mysql://${DB_HOST:192.168.200.5}:${DB_PORT:3306}/cotizador_componentes_db?serverTimezone=UTC&allowPublicKeyRetrieval=true&useSSL=false
    username: ${DB_USERNAME:usuario}
    password: ${DB_PASSWORD:password}
    driver-class-name: com.mysql.cj.jdbc.Driver
  
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
    show-sql: false
  
server:
  port: 8082
  servlet:
    context-path: /componentes/v1/api

# Configuración de Seguridad
security:
  basic:
    enabled: true
    username: ${SECURITY_USERNAME:admin}
    password: ${SECURITY_PASSWORD:admin123}
    realm: "Componentes API"

# Configuración JWT
jwt:
  ms-seguridad:
    base-url: ${JWT_MS_SEGURIDAD_BASE_URL:http://localhost:8080}
    context-path: ${JWT_MS_SEGURIDAD_CONTEXT_PATH:/seguridad/v1/api}
    timeout: ${JWT_MS_SEGURIDAD_TIMEOUT:10000}
    connect-timeout: ${JWT_MS_SEGURIDAD_CONNECT_TIMEOUT:5000}
  expected-issuer: ${JWT_EXPECTED_ISSUER:ms-seguridad}
  cache-timeout-ms: ${JWT_CACHE_TIMEOUT_MS:300000}
  jwks:
    refresh-interval-ms: ${JWT_JWKS_REFRESH_INTERVAL_MS:300000}
    max-retries: ${JWT_JWKS_MAX_RETRIES:3}
    initial-delay-ms: ${JWT_JWKS_INITIAL_DELAY_MS:10000}
  # Configuración de rotación reactiva de llaves
  key-rotation:
    enabled: ${JWT_KEY_ROTATION_ENABLED:true}          # Habilitar rotación reactiva
    security-alert-threshold: ${JWT_SECURITY_ALERT_THRESHOLD:3}  # Alertas después de N intentos con KID inválido
    log-rotation-events: ${JWT_LOG_ROTATION_EVENTS:true}         # Registrar eventos de rotación
    cleanup-old-keys: ${JWT_CLEANUP_OLD_KEYS:true}              # Limpiar llaves anteriores después de rotación
  # Configuración de validación de sesiones
  session-validation:
    enabled: ${JWT_SESSION_VALIDATION_ENABLED:true}             # Habilitar validación de sesiones en JWT

# Configuración de Sesiones
session:
  cache:
    ttl-ms: ${SESSION_CACHE_TTL_MS:30000}          # TTL del caché de sesiones (30 segundos)
    max-size: ${SESSION_CACHE_MAX_SIZE:1000}       # Tamaño máximo del caché
    enabled: ${SESSION_CACHE_ENABLED:true}         # Habilitar caché de sesiones
  validation:
    timeout-ms: ${SESSION_VALIDATION_TIMEOUT_MS:5000}     # Timeout para validación de sesiones
    max-retries: ${SESSION_VALIDATION_MAX_RETRIES:3}      # Máximo número de reintentos
    retry-delay-ms: ${SESSION_VALIDATION_RETRY_DELAY_MS:1000}  # Delay entre reintentos

# Configuración de Kafka
kafka:
  bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
  producer:
    enabled: ${KAFKA_PRODUCER_ENABLED:true}
    batch-size: ${KAFKA_PRODUCER_BATCH_SIZE:16384}
    linger-ms: ${KAFKA_PRODUCER_LINGER_MS:10}
    buffer-memory: ${KAFKA_PRODUCER_BUFFER_MEMORY:33554432}
    compression-type: ${KAFKA_PRODUCER_COMPRESSION:snappy}
    retries: ${KAFKA_PRODUCER_RETRIES:3}
    retry-backoff-ms: ${KAFKA_PRODUCER_RETRY_BACKOFF_MS:1000}
    max-in-flight: ${KAFKA_PRODUCER_MAX_IN_FLIGHT:5}
    acks: ${KAFKA_PRODUCER_ACKS:all}
    enable-idempotence: ${KAFKA_PRODUCER_IDEMPOTENCE:true}
    request-timeout-ms: ${KAFKA_PRODUCER_REQUEST_TIMEOUT:30000}
    delivery-timeout-ms: ${KAFKA_PRODUCER_DELIVERY_TIMEOUT:120000}
  topics:
    componentes-changes: ${KAFKA_TOPIC_COMPONENTES_CHANGES:componentes.changes}
    promociones-changes: ${KAFKA_TOPIC_PROMOCIONES_CHANGES:promociones.changes}
  monitoring:
    log-events: ${KAFKA_LOG_EVENTS:true}
    log-level: ${KAFKA_LOG_LEVEL:INFO}

# Configuración de Spring Boot Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
  health:
    db:
      enabled: true
    diskspace:
      enabled: true

logging:
  level:
    mx.com.qtx: INFO
    mx.com.qtx.cotizador.security: DEBUG
    mx.com.qtx.cotizador.kafka: INFO
    org.springframework.web: WARN
    org.springframework.security: INFO
    org.springframework.kafka: INFO
    org.apache.kafka: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type: WARN
    com.zaxxer.hikari: WARN
    org.springframework.boot: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/componentes-application.log
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 30
      total-size-cap: 500MB