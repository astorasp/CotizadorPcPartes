spring:
  application:
    name: cotizador-api
  
  datasource:
    url: jdbc:mysql://${DB_HOST:mysql}:${DB_PORT:3306}/cotizador?serverTimezone=UTC&allowPublicKeyRetrieval=true&useSSL=false
    username: ${DB_USERNAME:cotizador_user}
    password: ${DB_PASSWORD:cotizador_pass}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 60000
  
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: false
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
    show-sql: false
  
  sql:
    init:
      mode: never # Los scripts se ejecutan en el contenedor MySQL

# Configuración específica para contenedor
server:
  port: 8080
  servlet:
    context-path: /cotizador/v1/api
  tomcat:
    max-threads: 200
    min-spare-threads: 10
    max-connections: 8192


# Configuración JWT para Docker
jwt:
  ms-seguridad:
    base-url: ${JWT_MS_SEGURIDAD_BASE_URL:http://ms-seguridad:8081}
    context-path: ${JWT_MS_SEGURIDAD_CONTEXT_PATH:/seguridad/v1/api}
    timeout: ${JWT_MS_SEGURIDAD_TIMEOUT:15000}
    connect-timeout: ${JWT_MS_SEGURIDAD_CONNECT_TIMEOUT:10000}
  expected-issuer: ${JWT_EXPECTED_ISSUER:ms-seguridad}
  cache-timeout-ms: ${JWT_CACHE_TIMEOUT_MS:300000}
  jwks:
    refresh-interval-ms: ${JWT_JWKS_REFRESH_INTERVAL_MS:300000}
    max-retries: ${JWT_JWKS_MAX_RETRIES:5}
    initial-delay-ms: ${JWT_JWKS_INITIAL_DELAY_MS:15000}

# Configuración de seguridad para Docker - Deshabilitar Basic Auth  
security:
  basic:
    enabled: false
    username: ${SECURITY_USERNAME:admin}
    password: ${SECURITY_PASSWORD:admin123}
    realm: "Cotizador API - Docker JWT Only"

# Configuración completa de Spring Boot Actuator para Docker
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env,prometheus,loggers
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
    info:
      enabled: true
    metrics:
      enabled: true
  health:
    db:
      enabled: true
    diskspace:
      enabled: true
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  info:
    build:
      enabled: true
    git:
      mode: full
    env:
      enabled: true

# Logging optimizado para contenedores
logging:
  level:
    mx.com.qtx: INFO
    mx.com.qtx.cotizador.security: DEBUG
    org.springframework.web: WARN
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type: WARN
    com.zaxxer.hikari: WARN
    org.springframework.boot: WARN
    org.springframework.boot.autoconfigure: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{36}] - %msg%n"
  file:
    name: /app/logs/cotizador-docker.log
  logback:
    rollingpolicy:
      max-file-size: 50MB
      max-history: 10
      total-size-cap: 500MB 