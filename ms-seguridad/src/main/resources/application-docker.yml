server:
  port: 8081
  servlet:
    context-path: /seguridad/v1/api

spring:
  application:
    name: ms-seguridad
  
  datasource:
    url: jdbc:mysql://${DB_HOST:mysql-seguridad}:3306/seguridad
    username: ${DB_USERNAME:seguridad_user}
    password: ${DB_PASSWORD:seguridad_pass}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 600000
      leak-detection-threshold: 60000
      pool-name: SeguridadHikariPool
  
  jpa:
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    database-platform: org.hibernate.dialect.MySQL8Dialect
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        use_sql_comments: false
        jdbc:
          batch_size: 20
          order_inserts: true
          order_updates: true
  
  security:
    user:
      name: ${SECURITY_USERNAME:admin}
      password: ${SECURITY_PASSWORD:admin123}
      roles: ADMIN

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
  server:
    port: 8091

logging:
  level:
    mx.com.qtx.seguridad.service: DEBUG
    mx.com.qtx.seguridad.controller: DEBUG
    mx.com.qtx.seguridad.scheduler.SessionCleanupJob: INFO
    mx.com.qtx.seguridad.config.QuartzConfig: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.quartz: WARN
    root: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# JWT Configuration
jwt:
  access-token:
    expiration: ${JWT_ACCESS_TOKEN_DURATION:300000}  # 5 minutos en milisegundos
  refresh-token:
    expiration: ${JWT_REFRESH_TOKEN_DURATION:900000}  # 15 minutos en milisegundos
  algorithm: RS256

# Configuraci√≥n de limpieza de sesiones
session:
  cleanup:
    enabled: ${SESSION_CLEANUP_ENABLED:true}
    interval:
      seconds: ${SESSION_CLEANUP_INTERVAL_SECONDS:15}